import numpy as np

# Calculate infrastructure polygon geometry loss		
def function(infrastructure_polygons, hazard):
	
	# Flood depths for depth-damage curve interpolation.
    depth_x = [0.0, 0.25, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.1, 10.0]

    # Damage ratios for point infrastructure classes. Add new array for each new infrastructure class. 
    IPG1_ydr = [0.0, 0.01, 0.025, 0.04, 0.065, 0.085, 0.105, 0.125, 0.15, 1.0]# Class 1 i.e., Paved Airport
    IPG2_ydr = [0.0, 0.08, 0.16, 0.23, 0.3, 0.33, 0.39, 0.42, 0.45, 1.0]# Class 2 i.e., Unpaved Airport
    IPG3_ydr = [0.0, 0.02, 0.04, 0.08, 0.12, 0.14, 0.2, 0.3, 0.32, 1.0]# Class 3 i.e., Port pavement
	
	# Set default flood depths
    if hazard is None:
        depth = 0
    else:
        depth = hazard

	# Define infrastructure point use from exposure layer.
    useIPG = infrastructure_polygons["UseType"]
#    subuseIPG = infrastructure_polygons["SubUseType"]
    valueIPG = infrastructure_polygons["Value"]

    if depth is None:
        return {'Direct_Loss': 0}
    else:
        if useIPG  == 'Paved Airport':
            damage_ratio = np.interp(depth, depth_x, IPG1_ydr)
        elif useIPG  == 'Unpaved Airport':
            damage_ratio = np.interp(depth, depth_x, IPG2_ydr)
        elif useIPG  == 'Dock' or useIPG  == 'Port':
            damage_ratio = np.interp(depth, depth_x, IPG3_ydr)
        else:
            damage_ratio = np.interp(depth, depth_x, IPG2_ydr)

        loss = int(damage_ratio * valueIPG)
        return {'Direct_Loss': loss}
