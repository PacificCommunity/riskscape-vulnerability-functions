import numpy as np

# Calculate building loss
def function(buildings, hazard):
    
    # Set defaults flood depths
    floor_height = 0.4
    
    if hazard is None:
        depth = 0
    else:
        depth = hazard - floor_height

    # Flood depths for vulnerability curve interpolation.
    depth_x = [0.0, 0.25, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 4.0, 10.0]

    # Damage ratios for building classes. Add new array for each new building class. 
    B1_ydr = [0.0, 0.01, 0.02, 0.051, 0.134, 0.329, 0.626, 0.859, 0.989, 1.0]# Class 1 i.e., Residential
    B2_ydr = [0.0, 0.0122, 0.024, 0.052, 0.105, 0.2, 0.345, 0.524, 0.825, 1.0]# Class 2 i.e., Commercial
    B3_ydr = [0.0, 0.0175, 0.035, 0.102, 0.255, 0.504, 0.748, 0.896, 0.986, 1.0]# Class 3 i.e., Industrial or infrastructure
    B4_ydr = [0.0, 0.0122, 0.024, 0.052, 0.105, 0.2, 0.345, 0.524, 0.825, 1.0]# Class 4 i.e., Public
    B5_ydr = [0.0, 0.025, 0.059, 0.135, 0.296, 0.544, 0.78, 0.915, 0.991, 1.0]# Class 5 i.e., Outbuilding

    # Define building use from exposure layer.
    usebld = buildings["UseType"]
    valuebld = buildings["Value"]

	#Calculate loss
    if depth is None:
        return {'Direct_Loss': 0}
    else:
        if usebld == 'Residential':
            damage_ratio = np.interp(depth, depth_x, B1_ydr)
        elif usebld == 'Commercial' or usebld == 'Commercial - Accommodation':
            damage_ratio = np.interp(depth, depth_x, B2_ydr)
        elif usebld == 'Industrial' or usebld == 'Infrastructure':
            damage_ratio = np.interp(depth, depth_x, B3_ydr)
        elif usebld == 'Public':
            damage_ratio = np.interp(depth, depth_x, B4_ydr)
        elif usebld == 'Outbuilding':
            damage_ratio = np.interp(depth, depth_x, B5_ydr)
        else:
            damage_ratio = np.interp(depth, depth_x, B1_ydr)# Class 1 as default vulnerability curve

        loss = int(damage_ratio * valuebld)
        return {'Direct_Loss': loss}

