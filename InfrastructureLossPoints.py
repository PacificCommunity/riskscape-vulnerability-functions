import numpy as np

# Calculate infrastructure point geometry loss
def function(infrastructure_points, hazard):
	
	# Flood depths for depth-damage curve interpolation.
    depth_x = [0.0, 0.25, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.1, 10.0]

    # Damage ratios for point infrastructure classes. Add new array for each new infrastructure class. 
    IP1_ydr = [0.0, 0.1, 0.24, 0.36, 0.44, 0.52, 0.56, 0.6, 0.62, 1.0]# Class 1 i.e., Facilities
    IP2_ydr = [0.0, 0.1, 0.24, 0.36, 0.44, 0.52, 0.56, 0.6, 0.62, 1.0]# Class 2 i.e., Substations
    IP3_ydr = [0.0, 0.09, 0.18, 0.34, 0.4, 0.52, 0.58, 0.64, 0.7, 1.0]# Class 3 i.e., Storage, nodes
    IP4_ydr = [0.0, 0.2, 0.08, 0.14, 0.16, 0.185, 0.21, 0.23, 0.25, 1.0]# Class 4 i.e., Bridges
    IP5_ydr = [0.0, 0.2, 0.3, 0.45, 0.575, 0.65, 0.725, 0.8, 0.9, 1.0]# Class 5 i.e., Buildings

    # Set defaults flood depths
    if hazard is None:
        depth = 0
    else:
        depth = hazard
    
	# Define infrastructure point use from exposure layer.
    useIP = infrastructure_points["UseType"]
    subuseIP = infrastructure_points["SubUseType"]
    valueIP = infrastructure_points["Value"]
	
    if depth is None:
        return {'Direct_Loss': 0}
    else:
        if useIP  == 'Communication' or useIP  == 'Generator' or useIP  ==  'Fossil Fuel Power Plant' or useIP  ==  'Hybrid Fossil Fuel and Solar Power Plant' or useIP  ==  'Solar Power Plant' or useIP  == 'Water Treatment' or useIP == 'Hydroelectric Power Plant' or useIP == 'Wind Farm':
            damage_ratio = np.interp(depth, depth_x, IP1_ydr)
        elif useIP  ==  'Sub-Station':
            damage_ratio = np.interp(depth, depth_x, IP2_ydr)
        elif useIP  == 'Water Intake' or useIP  == 'Storage Tank' or useIP  == 'Satellite Dish':
            damage_ratio = np.interp(depth, depth_x, IP3_ydr)
        elif useIP ==  'Non-Steel/Concrete Bridge' or useIP  ==  'Concrete Bridge' or useIP  ==  'Steel Bridge' or useIP  ==  'Helipad':
            damage_ratio = np.interp(depth, depth_x, IP4_ydr)
        elif useIP ==  'Bus Station':
            damage_ratio = np.interp(depth, depth_x, IP5_ydr)
        elif useIP ==  'Dam' or useIP ==  'Mine':
            damage_ratio = 0
        else:
            damage_ratio = np.interp(depth, depth_x, IP1_ydr)# Class 1 as default depth-damage curve

        loss = int(damage_ratio * valueIP)
        return {'Direct_Loss': loss}
